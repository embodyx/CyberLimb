# Use Ubuntu 22.04 as the base image
FROM ubuntu:22.04

# Set environment variables for non-interactive installation and ROS
ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_DISTRO=humble

# Update and install essential tools
RUN apt-get update && apt-get install -y \
    curl gnupg2 lsb-release sudo software-properties-common build-essential \
    python3-pip git wget python3-colcon-common-extensions \
    python3-vcstool locales openssh-client \
    && locale-gen en_US en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

# Set locale for ROS
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

# Add ROS2 apt repository and install ROS2 Humble core components
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo tee /etc/apt/trusted.gpg.d/ros.asc
RUN echo "deb http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/ros2.list
RUN apt-get update && apt-get install -y \
    ros-humble-ros-base python3-rosdep \
    && rosdep init && rosdep update

# Source ROS setup scripts
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
RUN /bin/bash -c "source /opt/ros/humble/setup.bash"

# Install Python dependencies for OpenVLA and transformers
RUN pip3 install --upgrade pip
RUN pip3 install torch torchvision torchaudio \
    transformers[torch] huggingface_hub

# Install Intel RealSense SDK for depth camera (if needed)
# RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-key C8B3A55A6F3EFCDE
# RUN add-apt-repository "deb http://realsense-hw-public.s3.amazonaws.com/Debian/apt-repo jammy main" -u
# RUN apt-get install -y librealsense2-dkms librealsense2-utils librealsense2-dev librealsense2-dbg

# Clone and install Interbotix SDK if necessary for processing
RUN mkdir -p ~/interbotix_ws/src
WORKDIR /root/interbotix_ws/src
RUN git clone https://github.com/Interbotix/interbotix_ros_manipulators.git
WORKDIR /root/interbotix_ws
RUN rosdep install --from-paths src --ignore-src -r -y
RUN colcon build

# Install additional dependencies for running the processing_decision_node
RUN apt-get install -y python3-catkin-tools ros-humble-cv-bridge

# Setup SSH key for GitHub
RUN mkdir -p /root/.ssh && chmod 0700 /root/.ssh
# Copy your SSH private key into the container (ensure you set the key file correctly when building)
COPY id_rsa /root/.ssh/id_rsa
RUN chmod 600 /root/.ssh/id_rsa
RUN ssh-keyscan github.com >> /root/.ssh/known_hosts

# Clone your project repository and build the workspace
WORKDIR /root/interbotix_ws/src
RUN git clone git@github.com:jakekemple/CyberLimb.git
WORKDIR /root/interbotix_ws
RUN colcon build

# Set default entrypoint
CMD ["/bin/bash"]
